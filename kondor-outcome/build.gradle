plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    id 'signing'
    id 'java-library'
}


java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "io.strikt:strikt-core:$striktVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:$junitLauncherVersion"

}


tasks {
    test {
        useJUnitPlatform()
        testLogging {
            events "skipped", "failed", "passed"
        }
    }
}

archivesBaseName = 'kondor-outcome'

//        name 'kondor-outcome'
//        description 'A Kotlin specialized Either type for wrapping results in a functional way'
//        url 'https://github.com/uberto/kondor-json'


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = archivesBaseName
            version = project.version

            pom {
                name = 'kondor-outcome'
                description = 'A Kotlin specialized Either type for wrapping results in a functional way'
                url = 'https://github.com/uberto/kondor-json'
                inceptionYear = '2021'
                scm {
                    url = 'https://github.com/uberto/kondor-json'
                    connection = 'https://github.com/uberto/kondor-json.git'
                    developerConnection = 'git@github.com:uberto/kondor-json.git'
                }
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'UbertoBarbini'
                        name = 'Uberto Barbini'
                        email = 'uberto.gama@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = version.endsWith('SNAPSHOT') ? 'https://oss.sonatype.org/content/repositories/snapshots/' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = findProperty('nexusUsername')
                password = findProperty('nexusPassword')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}